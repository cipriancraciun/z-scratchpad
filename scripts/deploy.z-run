#!/dev/null




::// deploy / ...




:: deploy / rsync / linux :: exec -- "${ZRUN[@]}" ':: deploy / rsync' linux "${@}"
:: deploy / rsync / darwin :: exec -- "${ZRUN[@]}" ':: deploy / rsync' darwin "${@}"
:: deploy / rsync / freebsd :: exec -- "${ZRUN[@]}" ':: deploy / rsync' freebsd "${@}"
:: deploy / rsync / openbsd :: exec -- "${ZRUN[@]}" ':: deploy / rsync' openbsd "${@}"

--<< deploy / rsync
	test "${#}" -eq 2
	_os="${1}"
	_target="${2}"
	shift -- 2
	"${ZRUN[@]}" ':: deploy / release' "${_os}"
	_source="./.outputs/main--release--${_os}"
	printf -- '[ii]  deploying (`%s`) to `%s`...\n' "${_os}" "${_target}" >&2
	exec -- rsync -i -t -p --chmod=0555 -- "${_source}" "${_target}"
!!




<< deploy / publish
	test "${#}" -eq 0
	test -d ./.publish/
	"${ZRUN[@]}" ':: deploy / release'
	_build_version="$( exec -- cat -- ./sources/embedded/build/version.txt )"
	printf -- '[ii]  publishing `%s`...\n' "${_build_version}" >&2
	for _os in linux darwin freebsd openbsd ; do
		if test -e "./.publish/${_os}/z-scratchpad--${_os}--v${_build_version}" -a "${_build_version}" != 0.0.0 ; then
			printf -- '[ee]  release already exists for `%s`!\n' "${_os}" >&2
			continue
		fi
		rsync -i -t -p --chmod=0555 -- \
				"./.outputs/main--release--${_os}" \
				"./.publish/${_os}/z-scratchpad--${_os}--v${_build_version}" \
		#
		gpg2 --sign --detach-sign --armor \
				--default-key 58FC2194FCC2478399CB220C5A974037A6FD8839 \
				--output "./.publish/${_os}/z-scratchpad--${_os}--v${_build_version}.asc" \
				-- "./.publish/${_os}/z-scratchpad--${_os}--v${_build_version}" \
		#
		gpg2 --verify \
				-- "./.publish/${_os}/z-scratchpad--${_os}--v${_build_version}.asc" \
		#
		ln -s -T -f -- "./z-scratchpad--${_os}--v${_build_version}" "./.publish/${_os}/z-scratchpad"
		ln -s -T -f -- "./z-scratchpad--${_os}--v${_build_version}.asc" "./.publish/${_os}/z-scratchpad.asc"
	done
!!




<< deploy / release
	if test "${#}" -ge 1 ; then
		_os="${1}"
		shift -- 1
	else
		_os='all'
	fi
	test "${#}" -eq 0
	if test "${__DEPLOY_NORELEASE:-}" == true ; then
		exit -- 0
	fi
	case "${_os}" in
		( all | linux )
			"${ZRUN[@]}" ':: go / build / main / release / linux'
		;;&
		( all | darwin )
			"${ZRUN[@]}" ':: go / build / main / release / darwin'
		;;&
		( all | freebsd )
			"${ZRUN[@]}" ':: go / build / main / release / freebsd'
		;;&
		( all | openbsd )
			"${ZRUN[@]}" ':: go / build / main / release / openbsd'
		;;&
		( all | linux | darwin | freebsd | openbsd )
		;;
		( * )
			printf -- '[ee]  invalid os `%s`;  aborting!\n' "${_os}" >&2
		;;
	esac
!!

