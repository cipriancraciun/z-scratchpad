#!/dev/null




::// run / ...




--:: watch / run / exec :: exec -- "${ZRUN[@]}" ':: sources / watch' ':: run / exec' "${@}"
--:: watch / run / exec / * :: exec -- "${ZRUN[@]}" ':: sources / watch' ':: run / exec / *' "${@}"




--:: run / exec :: exec -- "${ZRUN[@]}" ':: run / exec / *' z-scratchpad "${@}"

:: run / flags / version :: exec -- "${ZRUN[@]}" ':: run / exec' --version "${@}"
:: run / flags / sources / md5 :: exec -- "${ZRUN[@]}" ':: run / exec' --sources-md5 "${@}"
:: run / flags / sources / cpio :: exec -- "${ZRUN[@]}" ':: run / exec' --sources-cpio "${@}"
:: run / flags / manual :: exec -- "${ZRUN[@]}" ':: run / exec' --manual "${@}"
:: run / flags / manual / text :: exec -- "${ZRUN[@]}" ':: run / exec' --manual-text "${@}"
:: run / flags / manual / html :: exec -- "${ZRUN[@]}" ':: run / exec' --manual-html "${@}"
:: run / flags / manual / man :: exec -- "${ZRUN[@]}" ':: run / exec' --manual-man "${@}"
:: run / flags / readme :: exec -- "${ZRUN[@]}" ':: run / exec' --readme "${@}"
:: run / flags / readme / text :: exec -- "${ZRUN[@]}" ':: run / exec' --readme-text "${@}"
:: run / flags / readme / html :: exec -- "${ZRUN[@]}" ':: run / exec' --readme-html "${@}"
:: run / flags / sbom :: exec -- "${ZRUN[@]}" ':: run / exec' --sbom "${@}"
:: run / flags / sbom / text :: exec -- "${ZRUN[@]}" ':: run / exec' --sbom-text "${@}"
:: run / flags / sbom / html :: exec -- "${ZRUN[@]}" ':: run / exec' --sbom-html "${@}"
:: run / flags / sbom / json :: exec -- "${ZRUN[@]}" ':: run / exec' --sbom-json "${@}"
:: run / flags / help :: exec -- "${ZRUN[@]}" ':: run / exec' --help "${@}"




--<< run / exec / *
	
	test "${#}" -ge 1
	_main="${1}"
	shift -- 1
	
	_target="${__RUN_TARGET:-debug-build}"
	_profile="${__RUN_PROFILE:-none}"
	
	_wrapper=()
	_extra_arguments=()
	
	case "${_profile}" in
		( none )
		;;
		( all | cpu )
			_extra_arguments+=(
					--profile-cpu-path "./.outputs/${_main}--profile--cpu.pprof"
				)
		;;&
		( all | memory )
			_extra_arguments+=(
					--profile-memory-path "./.outputs/${_main}--profile--memory.pprof"
				)
		;;&
		( all | cpu | memory )
		;;
		( hyperfine | hyperfine-with-output | time )
		;;
		( * )
			printf -- '[ee]  invalid run profile `%s`;  aborting!\n' "${_profile}" >&2
			exit -- 1
		;;
	esac
	
	case "${_target}" in
		( debug-build )
			export -- __BUILD_SUFFIX=native
			"${ZRUN[@]}" ':: go / build / * / debug' "${_main}"
		;;&
		( release-build )
			export -- __BUILD_SUFFIX=native
			"${ZRUN[@]}" ':: go / build / * / release' "${_main}"
		;;&
		( debug | debug-build )
			_command=( "./.outputs/binaries/${_main}--debug--native" "${_extra_arguments[@]}" "${@}" )
		;;
		( release | release-build )
			_command=( "./.outputs/binaries/${_main}--release--native" "${_extra_arguments[@]}" "${@}" )
		;;
		( installed )
			_command=( "$( type -P -- "${_main}" )" "${_extra_arguments[@]}" "${@}" )
		;;
		( * )
			printf -- '[ee]  invalid target `%s`;  aborting!\n' "${_target}" >&2
			exit -- 1
		;;
	esac
	
	if test -e "./.outputs/${_main}--profile--cpu.pprof" ; then
		rm -- "./.outputs/${_main}--profile--cpu.pprof"
	fi
	if test -e "./.outputs/${_main}--profile--memory.pprof" ; then
		rm -- "./.outputs/${_main}--profile--memory.pprof"
	fi
	
	if test -n "${__RUN_TERM:-}" ; then
		export -- TERM="${__RUN_TERM}"
	fi
	export -n -- __RUN_TERM=
	
	if test "${__RUN_DISPLAY:-}" == none ; then
		export -n -- DISPLAY=
	elif test -n "${__RUN_DISPLAY:-}" ; then
		export -- DISPLAY="${__RUN_DISPLAY}"
	fi
	export -n -- __RUN_DISPLAY=
	
	export -n -- \
			ZRUN_LIBRARY_SOURCE= \
			ZRUN_LIBRARY_URL= \
			ZRUN_LIBRARY_IDENTIFIER= \
			ZRUN_LIBRARY_FINGERPRINT= \
			ZRUN_EXECUTABLE= \
			ZRUN_WORKSPACE= \
			ZRUN_WORKSPACE_IDENTIFIER= \
			ZRUN_CACHE= \
	#
	
	case "${_profile}" in
		( hyperfine | hyperfine-with-output )
			_wrapper=(
					hyperfine
						--warmup 5
						--min-runs 10
						--max-runs 100
						--shell ''
						--command-name "${_main}"
				)
			if test "${_profile}" == hyperfine-with-output ; then
				_wrapper+=( --show-output )
			fi
			_wrapper+=( -- )
			exec -- "${_wrapper[@]}" "${_command[*]@Q}"
		;;
		( time )
			_wrapper=(
					/usr/bin/time
						-f '(( elapsed: %E (user: %U, kernel: %S), CPU: %P, memory: %M (faults: %F, swapped: %W), I/O: %I / %O (waits: %w) ))'
						--
				)
			exec -- "${_wrapper[@]}" "${_command[@]}"
		;;
		( * )
			exec -- "${_wrapper[@]}" "${_command[@]}"
		;;
	esac
!!




:: use / run / reset :: export -- __RUN_TARGET= __RUN_PROFILE= __RUN_TERM= __RUN_DISPLAY=

:: use / run / target / debug + build :: export -- __RUN_TARGET=debug-build
:: use / run / target / release + build :: export -- __RUN_TARGET=release-build
:: use / run / target / debug :: export -- __RUN_TARGET=debug
:: use / run / target / release :: export -- __RUN_TARGET=release
:: use / run / target / installed :: export -- __RUN_TARGET=installed

:: use / run / profile / none :: export -- __RUN_PROFILE=none
:: use / run / profile / all :: export -- __RUN_PROFILE=all
:: use / run / profile / cpu :: export -- __RUN_PROFILE=cpu
:: use / run / profile / memory :: export -- __RUN_PROFILE=memory
:: use / run / profile / time :: export -- __RUN_PROFILE=time
:: use / run / profile / hyperfine :: export -- __RUN_PROFILE=hyperfine
:: use / run / profile / hyperfine / with-output :: export -- __RUN_PROFILE=hyperfine-with-output

:: use / run / term / enable :: export -- __RUN_TERM="${TERM}"
:: use / run / term / disable :: export -- __RUN_TERM=dumb

:: use / run / xorg / enable :: export -- __RUN_DISPLAY="${DISPLAY}"
:: use / run / xorg / disable :: export -- __RUN_DISPLAY=none




<< go / pprof / cpu / * / server
	test "${#}" -ge 1
	_main="${1}"
	shift -- 1
	test "${#}" -eq 0
	test -f "./.outputs/${_main}--profile--cpu.pprof"
	exec -- go tool pprof -http 127.70.72.170:8080 -no_browser -functions -- "./.outputs/${_main}--profile--cpu.pprof"
!!

<< go / pprof / memory / * / server
	test "${#}" -ge 1
	_main="${1}"
	shift -- 1
	test "${#}" -eq 0
	test -f "./.outputs/${_main}--profile--memory.pprof"
	exec -- go tool pprof -http 127.146.243.63:8080 -no_browser -functions -sample_index=alloc_space -- "./.outputs/${_main}--profile--memory.pprof"
!!

