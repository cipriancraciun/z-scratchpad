#!/dev/null




::// run / ...
::// use / ...
::// watch / run / ...




:: watch / run / server :: exec -- "${ZRUN[@]}" ':: watch / run / exec' server "${@}"
:: watch / run / menu :: exec -- "${ZRUN[@]}" ':: watch / run / exec' menu "${@}"

:: watch / run / exec :: exec -- "${ZRUN[@]}" ':: sources / watch' ':: run / exec' "${@}"




:: run / version :: exec -- "${ZRUN[@]}" ':: run / exec' --version "${@}"
:: run / sources :: exec -- "${ZRUN[@]}" ':: run / exec' --sources "${@}"
:: run / help :: exec -- "${ZRUN[@]}" ':: run / exec' --help "${@}"


:: run / menu :: exec -- "${ZRUN[@]}" ':: run / exec' menu "${@}"
:: run / server :: exec -- "${ZRUN[@]}" ':: run / exec' server "${@}"
:: run / browse :: exec -- "${ZRUN[@]}" ':: run / exec' browse "${@}"
:: run / browse / select / library :: exec -- "${ZRUN[@]}" ':: run / exec' browse -S "${@}"
:: run / browse / select / document :: exec -- "${ZRUN[@]}" ':: run / exec' browse -s "${@}"
:: run / list :: exec -- "${ZRUN[@]}" ':: run / exec' list "${@}"
:: run / search :: exec -- "${ZRUN[@]}" ':: run / exec' search "${@}"
:: run / search / body :: exec -- "${ZRUN[@]}" ':: run / exec' search -W body "${@}"
:: run / grep :: exec -- "${ZRUN[@]}" ':: run / exec' grep "${@}"
:: run / grep / body :: exec -- "${ZRUN[@]}" ':: run / exec' grep -W body "${@}"
:: run / edit :: exec -- "${ZRUN[@]}" ':: run / exec' edit "${@}"
:: run / edit / select :: exec -- "${ZRUN[@]}" ':: run / exec' edit -s "${@}"
:: run / create :: exec -- "${ZRUN[@]}" ':: run / exec' create "${@}"
:: run / create / select :: exec -- "${ZRUN[@]}" ':: run / exec' create -s "${@}"
:: run / export :: exec -- "${ZRUN[@]}" ':: run / exec' export "${@}"
:: run / export / select :: exec -- "${ZRUN[@]}" ':: run / exec' export -s "${@}"
:: run / dump :: exec -- "${ZRUN[@]}" ':: run / exec' dump "${@}"




<< run / exec
	
	_target="${__RUN_TARGET:-debug-build}"
	_profile="${__RUN_PROFILE:-none}"
	
	_wrapper=()
	_extra_arguments=()
	
	case "${_profile}" in
		( none )
		;;
		( all | cpu )
			_extra_arguments+=(
					--profile-cpu-path ./.outputs/profile--cpu.pprof
				)
		;;&
		( all | memory )
			_extra_arguments+=(
					--profile-memory-path ./.outputs/profile--memory.pprof
				)
		;;&
		( all | cpu | memory )
		;;
		( hyperfine )
		;;
		( * )
			printf -- '[ee]  invalid run profile `%s`;  aborting!\n' "${_profile}" >&2
			exit -- 1
		;;
	esac
	
	case "${_target}" in
		( debug-build )
			"${ZRUN[@]}" ':: go / build / main / debug'
		;;&
		( release-build )
			"${ZRUN[@]}" ':: go / build / main / release'
		;;&
		( debug | debug-build )
			_command=( ./.outputs/main--debug "${_extra_arguments[@]}" "${@}" )
		;;
		( release | release-build )
			_command=( ./.outputs/main--release "${_extra_arguments[@]}" "${@}" )
		;;
		( installed )
			_command=( "$( type -P -- z-scratchpad )" "${_extra_arguments[@]}" "${@}" )
		;;
		( * )
			printf -- '[ee]  invalid target `%s`;  aborting!\n' "${_target}" >&2
			exit -- 1
		;;
	esac
	
	if test -e ./.outputs/profile--cpu.pprof ; then
		rm -- ./.outputs/profile--cpu.pprof
	fi
	if test -e ./.outputs/profile--memory.pprof ; then
		rm -- ./.outputs/profile--memory.pprof
	fi
	
	case "${_profile}" in
		( hyperfine )
			_wrapper=(
					hyperfine
						--warmup 5
						--min-runs 10
						--max-runs 100
						--shell ''
						--command-name z-scratchpad
				)
			exec -- "${_wrapper[@]}" -- "${_command[*]@Q}"
		;;
		( * )
			exec -- "${_wrapper[@]}" "${_command[@]}"
		;;
	esac
!!


:: use / reset :: export -- __RUN_TARGET= __RUN_PROFILE=

:: use / target / debug + build :: export -- __RUN_TARGET=debug-build
:: use / target / release + build :: export -- __RUN_TARGET=release-build
:: use / target / debug :: export -- __RUN_TARGET=debug
:: use / target / release :: export -- __RUN_TARGET=release
:: use / target / installed :: export -- __RUN_TARGET=installed

:: use / profile / none :: export -- __RUN_PROFILE=none
:: use / profile / all :: export -- __RUN_PROFILE=all
:: use / profile / cpu :: export -- __RUN_PROFILE=cpu
:: use / profile / memory :: export -- __RUN_PROFILE=memory
:: use / profile / hyperfine :: export -- __RUN_PROFILE=hyperfine




<< go / pprof / cpu / server
	test "${#}" -eq 0
	test -f ./.outputs/profile--cpu.pprof
	exec -- go tool pprof -http 127.70.72.170:8080 -no_browser -functions -- ./.outputs/profile--cpu.pprof
!!

<< go / pprof / memory / server
	test "${#}" -eq 0
	test -f ./.outputs/profile--memory.pprof
	exec -- go tool pprof -http 127.146.243.63:8080 -no_browser -functions -sample_index=alloc_space -- ./.outputs/profile--memory.pprof
!!

